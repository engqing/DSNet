optimizer : {
  type: AdamW,
  kwargs: {
  lr : 0.0001,
  weight_decay : 0
}}

scheduler: {
  type: LambdaLR,
  kwargs: {
  decay_step: 40,
  lr_decay: 0.7,
  lowest_decay: 0.02  # min lr = lowest_decay * lr
}}

bnmscheduler: {
  type: Lambda,
  kwargs: {
  decay_step: 40,
  bn_decay: 0.5,
  bn_momentum: 0.9,
  lowest_decay: 0.01
}}

dataset : {
  train : { _base_: cfgs/dataset_configs/PCN.yaml,
            others: {subset: 'train'}},
  val : { _base_: cfgs/dataset_configs/PCN.yaml,
            others: {subset: 'test'}},
  test : { _base_: cfgs/dataset_configs/PCN.yaml,
            others: {subset: 'test'}}}
model : {
  NAME: DSNet, num_pred: 16384, gridding_loss_scales: 128, gridding_loss_alphas: 0.1, trans_dim: 384, num_query: 224, knn_layer: 1}
total_bs : 32
step_per_update : 1
max_epoch : 600

consider_metric: CDL1